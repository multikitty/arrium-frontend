import * as React from "react"
import {
  Grid,
  MenuItem,
  Select,
  TextFieldProps,
  useMediaQuery,
  useTheme,
} from "@mui/material"
import { DesktopDatePicker } from "@mui/x-date-pickers/DesktopDatePicker"
import { MobileDatePicker } from "@mui/x-date-pickers/MobileDatePicker"
import CalendarIcon from "@mui/icons-material/CalendarTodayOutlined"
import { rem } from "polished"
import {
  StyledAccountInformationTabDateField,
  StyledReferralTab,
  StyledReferralTabForm,
  StyledReferralTabFormActions,
  StyledReferralTabFormField,
  StyledReferralTabFormItem,
  StyledReferralTabFormItemText,
  StyledReferralTabFormItemTitle,
  StyledReferralTabFormLabel,
} from "./CustomerDetailPage.styled"
import { ContainedButton, OutlinedButton } from "../commons/Button"
import { ITabProps } from "./AccountInformationTab"
import { subDays } from "date-fns"

const ReferralTab = (props: ITabProps) => {
  const theme = useTheme()
  const isMdUp = useMediaQuery(theme.breakpoints.up("md"))
  const [dateGenerated, setDateGenerated] = React.useState<Date>(
    subDays(new Date(), 32)
  )

  return (
    <StyledReferralTab>
      <StyledReferralTabForm>
        <Grid container spacing={2}>
          <Grid item xs={12} lg={4}>
            <StyledReferralTabFormItem>
              <StyledReferralTabFormItemTitle>
                Referral code
              </StyledReferralTabFormItemTitle>
              <StyledReferralTabFormItemText>
                E4C11E
              </StyledReferralTabFormItemText>
            </StyledReferralTabFormItem>
            <StyledReferralTabFormItem>
              <StyledReferralTabFormLabel>
                Date generated
              </StyledReferralTabFormLabel>
              {isMdUp ? (
                <DesktopDatePicker
                  inputFormat="dd/MM/yyyy"
                  value={dateGenerated}
                  onChange={val => setDateGenerated(val!)}
                  renderInput={(params: TextFieldProps) => (
                    <StyledAccountInformationTabDateField
                      {...params}
                      error={false}
                    />
                  )}
                  components={{
                    OpenPickerIcon: CalendarIcon,
                  }}
                />
              ) : (
                <MobileDatePicker
                  inputFormat="dd/MM/yyyy"
                  value={dateGenerated}
                  onChange={val => setDateGenerated(val!)}
                  renderInput={(params: TextFieldProps) => (
                    <StyledAccountInformationTabDateField
                      {...params}
                      error={false}
                    />
                  )}
                  components={{
                    OpenPickerIcon: CalendarIcon,
                  }}
                />
              )}
            </StyledReferralTabFormItem>
            <StyledReferralTabFormItem>
              <StyledReferralTabFormLabel>
                Date activated
              </StyledReferralTabFormLabel>
              {isMdUp ? (
                <DesktopDatePicker
                  inputFormat="dd/MM/yyyy"
                  disabled
                  value={null}
                  onChange={() => null}
                  renderInput={(params: TextFieldProps) => (
                    <StyledAccountInformationTabDateField
                      {...params}
                      error={false}
                    />
                  )}
                  components={{
                    OpenPickerIcon: CalendarIcon,
                  }}
                />
              ) : (
                <MobileDatePicker
                  inputFormat="dd/MM/yyyy"
                  disabled
                  value={null}
                  onChange={() => null}
                  renderInput={(params: TextFieldProps) => (
                    <StyledAccountInformationTabDateField
                      {...params}
                      error={false}
                    />
                  )}
                  components={{
                    OpenPickerIcon: CalendarIcon,
                  }}
                />
              )}
            </StyledReferralTabFormItem>
          </Grid>
          <Grid item xs={12} lg={4}>
            <StyledReferralTabFormItem>
              <StyledReferralTabFormItemTitle>
                Active
              </StyledReferralTabFormItemTitle>
              <StyledReferralTabFormItemText>Yes</StyledReferralTabFormItemText>
            </StyledReferralTabFormItem>
            <StyledReferralTabFormItem>
              <StyledReferralTabFormLabel>
                Generated by
              </StyledReferralTabFormLabel>
              <Select
                displayEmpty
                defaultValue=""
                input={<StyledReferralTabFormField />}
                disabled
              >
                <MenuItem disabled value="">
                  Choose region here
                </MenuItem>
              </Select>
            </StyledReferralTabFormItem>
            <StyledReferralTabFormItem>
              <StyledReferralTabFormLabel>
                Generated for
              </StyledReferralTabFormLabel>
              <Select
                displayEmpty
                defaultValue=""
                input={<StyledReferralTabFormField />}
                disabled
              >
                <MenuItem disabled value="">
                  Choose region here
                </MenuItem>
              </Select>
            </StyledReferralTabFormItem>
          </Grid>
          <Grid item xs={12} lg={4}></Grid>
        </Grid>
        <StyledReferralTabFormActions>
          <OutlinedButton
            grey
            sx={{ mr: rem("12px") }}
            onClick={props.handleCancel}
          >
            Cancel
          </OutlinedButton>
          <ContainedButton onClick={props.handleSave}>Save</ContainedButton>
        </StyledReferralTabFormActions>
      </StyledReferralTabForm>
    </StyledReferralTab>
  )
}

export default ReferralTab
